version: '3.8'

services:
  db:
    image: postgres:16.1
    container_name: postgres
    env_file: .env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    ports:
      - '5432:5432'

  app:
    build:
     context: .
     dockerfile: Dockerfile
     target: dev
    container_name: app
    command: >
      bash -c "python manage.py collectstatic --noinput && python manage.py makemigrations && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - ./:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - '8000:8000'
    depends_on:
      - db

  celery:
    build:
      context: .
      target: dev
    container_name: celery
    command: celery -A config worker -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

  celery-beat:
    build:
      context: .
      target: dev
    container_name: celery-beat
    command: celery -A config beat -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  stripe:
    image: stripe/stripe-cli:v1.19.1
    container_name: stripe
    entrypoint: stripe
    command: listen --api-key ${STRIPE_SECRET_KEY} --forward-to ${ALLOWED_HOST}/webhooks/stripe/
    env_file: .env
    depends_on:
      - app
      - db

volumes:
  postgres_volume:
  static_volume:
  media_volume:

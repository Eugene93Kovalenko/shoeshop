#version: '3.8'
version: '2'

services:
  db:
    image: postgres:16.1
    container_name: postgres
#    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    ports:
      - '5432:5432'

  app:
    build: .
    container_name: app
#    restart: unless-stopped
    command: gunicorn config.wsgi:application --bind  0.0.0.0:8000
#    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    environment:
      - VIRTUAL_HOST=django.shoe-shop.site
      - LETSENCRYPT_HOST=django.shoe-shop.site
    volumes:
      - ./:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - '8000'
    ports:
      - '8000:8000'
    depends_on:
      - db

  nginx:
#    build: ./nginx
    build:
      dockerfile: ./Dockerfile
      context: ./nginx/
    container_name: nginx
#    restart: unless-stopped
    volumes:
      - static_volume:/static
      - media_volume:/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app

  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: acme-companion
    env_file: .env
    volumes_from:
      - nginx
    volumes:
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/tmp/docker.sock:ro

  celery:
    build: .
    container_name: celery
#    restart: unless-stopped
    command: celery -A config worker -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

  celery-beat:
    build: .
    container_name: celery-beat
#    restart: unless-stopped
    command: celery -A config beat -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

#  flower:
#    image: mher/flower:2.0
#    container_name: flower
##    restart: unless-stopped
#    command: celery -A config flower
#    volumes:
#      - ./:/app
#    depends_on:
#      - redis
#    ports:
#      - '5555:5555'

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  stripe:
    image: stripe/stripe-cli:v1.19.1
    container_name: stripe
#    restart: unless-stopped
    entrypoint: stripe
    command: listen --api-key ${STRIPE_SECRET_KEY} --forward-to app:8000/webhooks/stripe/
    env_file: .env
    depends_on:
      - app
      - db

volumes:
  postgres_volume:
  static_volume:
  media_volume:
  certs:
  vhost:
  html:
  acme:

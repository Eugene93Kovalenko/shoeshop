version: '3.8'

services:
  postgres:
    image: postgres:16.1
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
  app:
    build: .
    container_name: app
    restart: unless-stopped
#    command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn config.wsgi:application --bind  0.0.0.0:8000
    env_file: .env
    volumes:
      - ./:/app
      - static_volume:/app/static
      - media_volume:/app/media
#      - ./static:/static
#      - ./media:/media
    expose:
      - 8000
    ports:
      - '8000:8000'
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
#    build: ./nginx/
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./static:/static
#      - ./media:/media
      - static_volume:/static
      - media_volume:/media
    ports:
      - '80:80'
    depends_on:
      - app

  celery:
    image: celery:4.0
    container_name: celery
    restart: unless-stopped
    command: celery -A config worker -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - postgres

  flower:
    image: mher/flower:2.0
    container_name: flower
    restart: unless-stopped
    command: celery -A config flower
    volumes:
      - ./:/app
    depends_on:
      - redis
    ports:
      - '5555:5555'

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  stripe:
    image: stripe/stripe-cli:v1.19.1
    container_name: stripe
    restart: unless-stopped
    entrypoint: stripe
    command: listen --api-key ${STRIPE_SECRET_KEY} --forward-to app:8000/webhooks/stripe/
    env_file: .env
    depends_on:
      - app
      - postgres

volumes:
  postgres:
  static_volume:
  media_volume:

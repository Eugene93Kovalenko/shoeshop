version: '3.8'

services:
  db:
    image: postgres:16.1
    container_name: postgres
    restart: always
    env_file: .env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    ports:
      - '5432:5432'

  app:
    build:
     context: .
     dockerfile: Dockerfile
     target: prod
    container_name: app
    restart: always
    command: >
      bash -c "python manage.py collectstatic --noinput && python manage.py makemigrations && python manage.py migrate
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file: .env
    environment:
      - VIRTUAL_HOST=django.shoe-shop.site
      - LETSENCRYPT_HOST=django.shoe-shop.site
    volumes:
      - ./:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - '8000:8000'
    depends_on:
      - db

  nginx:
    build: ./nginx
    container_name: nginx
    env_file: .env
    restart: always
    volumes:
      - static_volume:/static
      - media_volume:/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app

  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: acme-companion
    restart: always
    env_file: .env
    environment:
      - NGINX_PROXY_CONTAINER=nginx
    volumes:
      - static_volume:/static
      - media_volume:/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh

  celery:
    build:
      context: .
#      dockerfile: Dockerfile
      target: prod
    container_name: celery
    restart: always
    command: celery -A config worker -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

  celery-beat:
    build:
      context: .
#      dockerfile: Dockerfile
      target: prod
    container_name: celery-beat
    restart: always
    command: celery -A config beat -l INFO
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
      - db

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  stripe:
    image: stripe/stripe-cli:v1.19.1
    container_name: stripe
    restart: always
    entrypoint: stripe
    command: listen --api-key ${STRIPE_SECRET_KEY} --forward-to https://${ALLOWED_HOST}/webhooks/stripe/
    env_file: .env
    depends_on:
      - app
      - db

  portainer:
    image: portainer/portainer-ce:2.20.0
    container_name: portainer
    restart: always
    environment:
      - TZ=Europe/Moscow
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer/portainer_data:/data
    ports:
      - "8001:8000"
      - "9443:9443"

volumes:
  postgres_volume:
  static_volume:
  media_volume:
  certs:
  vhost:
  html:
  acme:
